{"version":3,"file":"ContentList.94c8c73f.js","sources":["../../../../../../node_modules/@nuxt/content/dist/runtime/components/ContentList.vue"],"sourcesContent":["<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport ContentQuery from \"./ContentQuery\";\nexport default defineComponent({\n  name: \"ContentList\",\n  props: {\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  render(ctx) {\n    const slots = useSlots();\n    const { path, query } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || \"/\"\n    };\n    const emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentList>\", slot, data }, null, 2));\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        default: slots?.default ? ({ data, refresh, isPartial }) => slots?.default({ list: data, refresh, isPartial, ...this.$attrs }) : ({ data }) => emptyNode(\"default\", data),\n        empty: (bindings) => slots?.empty ? slots.empty(bindings) : ({ data }) => emptyNode(\"default\", data),\n        \"not-found\": (bindings) => slots?.[\"not-found\"] ? slots?.[\"not-found\"]?.(bindings) : ({ data }) => emptyNode(\"not-found\", data)\n      }\n    );\n  }\n});\n</script>\n"],"names":["ContentQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA,MAAA,YAAA,gBAAA;AAAA,EACA,MAAA;AAAA,EACA,OAAA;AAAA,IACA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,IACA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA,KAAA;AACA,UAAA,QAAA;AACA,UAAA,EAAA,MAAA,UAAA;AACA,UAAA,oBAAA;AAAA,MACA,GAAA,SAAA,CAAA;AAAA,MACA,MAAA,SAAA,+BAAA,SAAA;AAAA;AAEA,UAAA,YAAA,CAAA,MAAA,SAAA,EAAA,OAAA,MAAA,KAAA,UAAA,EAAA,SAAA,2CAAA,MAAA,KAAA,GAAA,MAAA,CAAA,CAAA;AACA,WAAA;AAAA,MACAA;AAAAA,MACA;AAAA,MACA;AAAA,QACA,UAAA,+BAAA,WAAA,CAAA,EAAA,MAAA,SAAA,gBAAA,+BAAA,QAAA,EAAA,MAAA,MAAA,SAAA,WAAA,GAAA,KAAA,OAAA,KAAA,CAAA,EAAA,KAAA,MAAA,UAAA,WAAA,IAAA;AAAA,QACA,OAAA,CAAA,cAAA,+BAAA,SAAA,MAAA,MAAA,QAAA,IAAA,CAAA,EAAA,KAAA,MAAA,UAAA,WAAA,IAAA;AAAA,QACA,aAAA,CAAA,aAAA;;AAAA,iDAAA,iBAAA,oCAAA,iBAAA,+BAAA,YAAA,CAAA,EAAA,KAAA,MAAA,UAAA,aAAA,IAAA;AAAA;AAAA,MACA;AAAA;EAEA;AACA,CAAA;;;;;;;"}