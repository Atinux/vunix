{"version":3,"file":"DocsPageContent.529868c5.js","sources":["../../../../../../node_modules/@nuxt-themes/docus-edge/composables/useCurrentNavigation.ts","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsAside.vue","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsPageBottom.vue","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsPrevNext.vue","../../../../../../node_modules/@nuxt-themes/docus-edge/composables/useScrollspy.ts","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsTocLinks.vue","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsToc.vue","../../../../../../node_modules/@nuxt-themes/docus-edge/components/docs/DocsPageContent.vue"],"sourcesContent":["export const useCurrentNavigation = () => {\n  const { navPageFromPath, navDirFromPath, navKeyFromPath } = useContentHelpers()\n\n  const { navigation, page } = useContent()\n  const docus = useDocus()\n\n  const route = useRoute()\n\n  const asideConfig = computed(() => {\n    return navKeyFromPath(route.path, 'aside', navigation.value || [])\n  })\n\n  const level = computed(() => {\n    // Use `aside.level` key from file or navigation\n    if (typeof asideConfig.value?.level !== 'undefined') { return asideConfig.value?.level }\n\n    // Fallback to docus config\n    return docus.value.aside?.level || 0\n  })\n\n  const filtered = computed(() => docus.value.aside?.exclude || [])\n\n  const tree = computed(() => {\n    let nav = navigation.value || []\n    let _path = route.path\n\n    if (asideConfig.value?.root) {\n      _path = asideConfig.value?.root\n\n      // Filter nav from local `root` value\n      nav = navDirFromPath(_path, nav)\n    }\n\n    if (level.value) {\n      // Filter if `aside.level` is enabled in docus configuration\n      const path = _path.split('/')\n\n      // Get level\n      const leveledPath = path.splice(0, 1 + level.value).join('/')\n\n      nav = navDirFromPath(leveledPath, nav) || []\n\n      if (!Array.isArray(nav)) { nav = [nav] }\n    }\n\n    // No navigation found; try to resolve page url\n    if (nav.length === 0) {\n      nav = navPageFromPath(page.value?._path || '/', navigation.value || [])\n\n      if (!nav) { return [] }\n\n      if (!Array.isArray(nav)) { nav = [nav] }\n    }\n\n    // Filtered using `aside.exclude` in docus configuration\n    return nav.filter((item) => {\n      if (filtered.value.includes(item._path)) { return false }\n\n      return true\n    })\n  })\n\n  return { tree, asideConfig }\n}\n","<script setup lang=\"ts\">\nconst { tree } = useCurrentNavigation()\n</script>\n\n<template>\n  <nav>\n    <DocsAsideTree v-if=\"tree?.length > 0\" :links=\"tree\" />\n    <NuxtLink v-else to=\"/\" class=\"flex items-center text-sm cursor-pointer u-text-gray-500 hover:u-text-gray-700\">\n      <Icon name=\"heroicons-outline:arrow-left\" class=\"w-4 h-4\" />\n      <span class=\"ml-2\">Go back</span>\n    </NuxtLink>\n  </nav>\n</template>\n","<script setup lang=\"ts\">\nconst config = useRuntimeConfig()\nconst { page } = useContent()\nconst docus = useDocus()\n</script>\n\n<template>\n  <div v-if=\"page\" class=\"flex flex-col-reverse justify-between gap-4 mt-8 text-sm u-text-gray-500 md:flex-row\">\n    <div class=\"flex flex-col flex-1 w-full gap-4 md:w-1/2\">\n      <PageEditLink v-if=\"config?.github && docus?.github?.edit\" />\n      <span v-if=\"page.mtime\" class=\"flex items-center\">Updated on: {{ new Intl.DateTimeFormat('en-US').format(Date.parse(page.mtime)) }}</span>\n    </div>\n\n    <div class=\"flex-1 w-full md:w-1/2\">\n      <PageContributors v-if=\"config?.github && docus?.github?.contributors\" />\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { upperFirst } from 'scule'\n\nconst { prev, next, navigation } = useContent()\nconst { navDirFromPath } = useContentHelpers()\n\nconst directory = (link) => {\n  const nav = navDirFromPath(link._path, navigation.value || [])\n\n  if (nav && nav[0]) {\n    return nav[0]._path\n  } else {\n    const dirs = link.split('/')\n    const directory = dirs.length > 1 ? dirs[dirs.length - 2] : ''\n    return directory.split('-').map(upperFirst).join(' ')\n  }\n}\n</script>\n\n<template>\n  <div v-if=\"prev || next\" class=\"flex flex-col-reverse justify-between gap-3 sm:flex-row sm:items-center\">\n    <NuxtLink\n      v-if=\"prev\"\n      :to=\"prev._path\"\n      class=\"relative min-w-0 p-3 border rounded-lg hover:border-primary-500 dark:hover:border-primary-500 hover:text-primary-500 u-border-gray-100\"\n    >\n      <p class=\"h-4 mb-1 text-xs font-medium text-right truncate u-text-gray-500\">\n        {{ directory(prev._path) }}\n      </p>\n\n      <p class=\"flex items-center gap-3\">\n        <Icon name=\"heroicons-outline:arrow-sm-left\" class=\"flex-shrink-0 w-5 h-5\" />\n        <span class=\"flex-1 font-medium leading-5 text-right truncate\">{{ prev.title }}</span>\n      </p>\n    </NuxtLink>\n    <span v-else />\n\n    <NuxtLink\n      v-if=\"next\"\n      :to=\"next._path\"\n      class=\"relative min-w-0 p-3 border rounded-lg hover:border-primary-500 dark:hover:border-primary-500 hover:text-primary-500 u-border-gray-100\"\n    >\n      <p class=\"h-4 mb-1 text-xs font-medium truncate u-text-gray-500\">\n        {{ directory(next._path) }}\n      </p>\n\n      <p class=\"flex items-center gap-3\">\n        <span class=\"flex-1 font-medium leading-5 truncate\">{{ next.title }}</span>\n        <Icon name=\"heroicons-outline:arrow-sm-right\" class=\"flex-shrink-0 w-5 h-5\" />\n      </p>\n    </NuxtLink>\n  </div>\n</template>\n","import type { Ref } from 'vue'\n\n/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref() as Ref<IntersectionObserver>\n  const visibleHeadings = ref([]) as Ref<string[]>\n  const activeHeadings = ref([]) as Ref<string[]>\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) =>\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) { visibleHeadings.value.push(id) } else { visibleHeadings.value = visibleHeadings.value.filter(t => t !== id) }\n    })\n\n  const updateHeadings = (headings: Element[]) =>\n    headings.forEach((heading) => {\n      observer.value.observe(heading)\n    })\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) { activeHeadings.value = oldVal } else { activeHeadings.value = val }\n  })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n","<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { TocLink } from '@nuxt/content/dist/runtime/types'\n\ndefineProps({\n  links: {\n    type: Array as PropType<TocLink[]>,\n    default: () => []\n  }\n})\n\nconst emit = defineEmits(['move'])\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst { activeHeadings, updateHeadings } = useScrollspy()\n\nwatch(\n  () => route.path,\n  () => {\n    if (process.client) {\n      setTimeout(() => {\n        updateHeadings([\n          ...document.querySelectorAll('.document-driven-page h1, .docus-content h1'),\n          ...document.querySelectorAll('.document-driven-page h2, .docus-content h2'),\n          ...document.querySelectorAll('.document-driven-page h3, .docus-content h3'),\n          ...document.querySelectorAll('.document-driven-page h4, .docus-content h4')\n        ])\n      }, 300)\n    }\n  },\n  {\n    immediate: true\n  }\n)\n\nconst scrollToHeading = (id: string) => {\n  router.push(`#${id}`)\n  emit('move', id)\n}\n</script>\n\n<template>\n  <ul>\n    <li v-for=\"link in links\" :key=\"link.text\" class=\"min-w-0 group\" :class=\"[{ 'pl-3': link.depth === 3, 'pl-6': link.depth === 4 }]\">\n      <a\n        :href=\"`#${link.id}`\"\n        class=\"block py-1 text-sm truncate lg:pr-3\"\n        :class=\"[activeHeadings.includes(link.id) ? 'text-primary-500' : 'u-text-gray-500 hover:u-text-gray-900']\"\n        @click.prevent=\"scrollToHeading(link.id)\"\n      >\n        {{ link.text }}\n      </a>\n      <DocsTocLinks v-if=\"link.children\" :links=\"link.children\" />\n    </li>\n  </ul>\n</template>\n","<script setup lang=\"ts\">\nconst { toc } = useContent()\nconst emit = defineEmits(['move'])\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-1 sm:space-y-2\">\n    <template v-if=\"toc?.links?.length\">\n      <div class=\"items-center hidden overflow-hidden text-sm font-semibold lg:flex\">\n        <span>Table of Contents</span>\n      </div>\n\n      <DocsTocLinks :links=\"toc.links\" @move=\"emit('move')\" />\n    </template>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nconst { page, navigation } = useContent()\nconst route = useRoute()\n\nconst fallbackValue = (value: string, fallback = true) => {\n  if (typeof page.value?.[value] !== 'undefined') {\n    return page.value[value]\n  }\n\n  return fallback\n}\n\nconst hasBody = computed(() => !page.value || page.value?.body?.children?.length > 0)\nconst hasToc = computed(() => page.value?.toc !== false && page.value?.body?.toc?.links?.length >= 2)\n\n// TODO: get navigation links from aside level\nconst hasAside = computed(() => page.value?.aside !== false && navigation.value?.length > 1)\nconst bottom = computed(() => fallbackValue('bottom', true))\nconst isOpen = ref(false)\n\n/*\n** This below is a workaround until Nuxt has a proper support for layouts and Suspense\n*/\nconst asideNav = ref(null)\n\nconst getParentPath = () => route.path.split('/').slice(0, 2).join('/')\nconst asideScroll = useState('asideScroll', () => {\n  return {\n    parentPath: getParentPath(),\n    scrollTop: asideNav.value?.scrollTop || 0\n  }\n})\n\nfunction watchScrollHeight () {\n  if (!asideNav.value) { return }\n  if (asideNav.value.scrollHeight === 0) {\n    setTimeout(watchScrollHeight, 0)\n  }\n  asideNav.value.scrollTop = asideScroll.value.scrollTop\n}\nonMounted(() => {\n  if (asideScroll.value.parentPath !== getParentPath()) {\n    asideScroll.value.parentPath = getParentPath()\n    asideScroll.value.scrollTop = 0\n  } else {\n    watchScrollHeight()\n  }\n})\n\nonBeforeUnmount(() => {\n  if (!asideNav.value) { return }\n  asideScroll.value.scrollTop = asideNav.value.scrollTop\n})\n</script>\n\n<template>\n  <AppContainer padded class=\"relative flex flex-col-reverse lg:grid lg:grid-cols-12 lg:gap-8\">\n    <!-- Aside -->\n    <aside\n      v-if=\"hasAside\"\n      ref=\"asideNav\"\n      class=\"lg:top-header hidden overflow-y-auto overflow-x-hidden pb-8 lg:sticky lg:col-span-2 lg:block lg:max-h-[calc(100vh-var(--header-height))] lg:self-start lg:pt-8\"\n    >\n      <DocsAside />\n    </aside>\n\n    <!-- Page Body -->\n    <article\n      class=\"relative flex flex-col flex-1 pt-8 pb-8 lg:mt-0 page-body\"\n      :class=\"{\n        'lg:col-span-12': !hasAside && !hasToc,\n        'lg:col-span-10': (!hasToc || !hasAside) && !(!hasAside && !hasToc),\n        'lg:col-span-8': hasToc && hasAside,\n        'pt-12 lg:pt-8': hasToc,\n      }\"\n    >\n      <slot v-if=\"hasBody\" />\n      <Alert v-else type=\"info\" class=\"!mt-0\">\n        Start writing in <ProseCodeInline>content/{{ page._file }}</ProseCodeInline> to see this page taking shape.\n      </Alert>\n      <template v-if=\"hasBody && page && bottom\">\n        <DocsPageBottom />\n        <ProseHr />\n        <DocsPrevNext />\n      </template>\n    </article>\n    <!-- TOC -->\n    <div\n      v-if=\"hasToc\"\n      :class=\"{\n        'flex items-center lg:block': !isOpen,\n      }\"\n      class=\"sticky flex items-center px-4 -mx-4 -mt-8 toc top-header lg:max-h-page sm:-mx-6 sm:px-6 lg:col-span-2 lg:mx-0 lg:self-start lg:bg-transparent lg:px-0 lg:pt-8 lg:backdrop-blur-none overflow-y-auto overflow-x-hidden\"\n    >\n      <div class=\"w-full cursor-pointer sm:cursor-auto\" @click=\"isOpen = !isOpen\">\n        <button class=\"flex items-center gap-1 py-3 lg:hidden\">\n          <span class=\"text-xs font-semibold\">Table of Contents</span>\n          <Icon name=\"heroicons-outline:chevron-right\" class=\"w-4 h-4 transition-transform duration-100 transform\" :class=\"[isOpen ? 'rotate-90' : 'rotate-0']\" />\n        </button>\n\n        <DocsToc class=\"mb-4 lg:mt-0\" :class=\"[isOpen ? 'lg:block' : 'hidden lg:block']\" @move=\"isOpen = false\" />\n      </div>\n    </div>\n  </AppContainer>\n</template>\n\n<style lang=\"postcss\" scoped>\n\n.page-body :deep(div:first-child h1:first-child) {\n  @apply mt-0 text-2xl font-extrabold tracking-tight u-text-gray-900 sm:text-3xl;\n}\n.page-body :deep(div:first-child h1:first-child + p) {\n  @apply mt-0 mb-8 sm:text-lg u-text-gray-500 pb-8 border-b u-border-gray-100;\n  & a {\n    @apply u-text-gray-700 hover:border-gray-700;\n  }\n}\n.toc {\n  &:before {\n    content: ' ';\n    width: 100%;\n    right: 0;\n    @apply absolute top-0 z-[-1] block h-full bg-white/95 backdrop-blur dark:bg-black/95;\n  }\n}\n\n@screen lg {\n  .toc {\n    &:before {\n      display: none;\n    }\n  }\n}\n\n</style>\n"],"names":[],"mappings":";;;;;;;;;AAAO,MAAA,uBAAA,MAAA;AACL,QAAA,EAAA,iBAAA,gBAAA,eAAA,IAAA,kBAAA;AAEA,QAAA,EAAA,YAAA,KAAA,IAAA,WAAA;AACA,QAAA,QAAA;AAEA,QAAA,QAAA;AAEA,QAAA,cAAA,SAAA,MAAA;AACE,WAAA,eAAA,MAAA,MAAA,SAAA,WAAA,SAAA,CAAA,CAAA;AAAA,EAAiE,CAAA;AAGnE,QAAA,QAAA,SAAA,MAAA;;AAEE,QAAA,SAAA,iBAAA,UAAA,mBAAA,WAAA,aAAA;AAAuD,cAAA,iBAAA,UAAA,mBAAA;AAAA,IAA0B;AAGjF,aAAA,WAAA,MAAA,UAAA,mBAAA,UAAA;AAAA,EAAmC,CAAA;AAGrC,QAAA,WAAA,SAAA;;AAAA,wBAAA,MAAA,UAAA,mBAAA,YAAA,CAAA;AAAA,GAAA;AAEA,QAAA,OAAA,SAAA,MAAA;;AACE,QAAA,MAAA,WAAA,SAAA;AACA,QAAA,QAAA,MAAA;AAEA,SAAA,iBAAA,UAAA,mBAAA,MAAA;AACE,eAAA,iBAAA,UAAA,mBAAA;AAGA,YAAA,eAAA,OAAA,GAAA;AAAA,IAA+B;AAGjC,QAAA,MAAA,OAAA;AAEE,YAAA,OAAA,MAAA,MAAA,GAAA;AAGA,YAAA,cAAA,KAAA,OAAA,GAAA,IAAA,MAAA,KAAA,EAAA,KAAA,GAAA;AAEA,YAAA,eAAA,aAAA,GAAA,KAAA,CAAA;AAEA,UAAA,CAAA,MAAA,QAAA,GAAA,GAAA;AAA2B,cAAA,CAAA,GAAA;AAAA,MAAU;AAAA,IAAE;AAIzC,QAAA,IAAA,WAAA,GAAA;AACE,YAAA,kBAAA,UAAA,UAAA,mBAAA,UAAA,KAAA,WAAA,SAAA,CAAA,CAAA;AAEA,UAAA,CAAA,KAAA;AAAY,eAAA;MAAQ;AAEpB,UAAA,CAAA,MAAA,QAAA,GAAA,GAAA;AAA2B,cAAA,CAAA,GAAA;AAAA,MAAU;AAAA,IAAE;AAIzC,WAAA,IAAA,OAAA,CAAA,SAAA;AACE,UAAA,SAAA,MAAA,SAAA,KAAA,KAAA,GAAA;AAA2C,eAAA;AAAA,MAAO;AAElD,aAAA;AAAA,IAAO,CAAA;AAAA,EACR,CAAA;AAGH,SAAA,EAAA,MAAA;AACF;;;;;AC9DA,UAAA,EAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAA,SAAA;AACA,UAAA,EAAA,SAAA;AACA,UAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAA,EAAA,MAAA,MAAA,WAAA,IAAA,WAAA;AACA,UAAA,EAAA,mBAAA;AAEA,UAAA,YAAA,CAAA,SAAA;AACA,YAAA,MAAA,eAAA,KAAA,OAAA,WAAA,SAAA,CAAA,CAAA;AAEA,UAAA,OAAA,IAAA,IAAA;AACA,eAAA,IAAA,GAAA;AAAA,MAAA,OAAA;AAEA,cAAA,OAAA,KAAA,MAAA,GAAA;AACA,cAAA,aAAA,KAAA,SAAA,IAAA,KAAA,KAAA,SAAA,KAAA;AACA,eAAA,WAAA,MAAA,GAAA,EAAA,IAAA,UAAA,EAAA,KAAA,GAAA;AAAA,MAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTO,MAAA,eAAA,MAAA;AACL,QAAA,WAAA;AACA,QAAA,kBAAA,IAAA,CAAA,CAAA;AACA,QAAA,iBAAA,IAAA,CAAA,CAAA;AASA,QAAA,iBAAA,CAAA,aAAA,SAAA,QAAA,CAAA,YAAA;AAEI,aAAA,MAAA,QAAA,OAAA;AAAA,EAA8B,CAAA;AAGlC,QAAA,iBAAA,CAAA,KAAA,WAAA;AACE,QAAA,IAAA,WAAA,GAAA;AAAwB,qBAAA,QAAA;AAAA,IAAuB,OAAA;AAAgB,qBAAA,QAAA;AAAA,IAAuB;AAAA,EAAI,CAAA;AAS5F,SAAA;AAAA,IAAO;AAAA,IACL;AAAA,IACA;AAAA,EACA;AAEJ;;;;;;;;;;;;ACzBA,UAAA,QAAA;AACA,cAAA;AAEA,UAAA,EAAA,gBAAA,eAAA,IAAA,aAAA;AAEA;AAAA,MAAA,MAAA,MAAA;AAAA,MACA,MAAA;AAAA,MAWA;AAAA,MACA;AAAA,QACA,WAAA;AAAA,MACA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA,UAAA,EAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAA,EAAA,MAAA,WAAA,IAAA,WAAA;AACA,UAAA,QAAA;AAEA,UAAA,gBAAA,CAAA,OAAA,WAAA,SAAA;;AACA,UAAA,SAAA,UAAA,UAAA,mBAAA,YAAA,aAAA;AACA,eAAA,KAAA,MAAA;AAAA,MAAA;AAGA,aAAA;AAAA,IAAA;AAGA,UAAA,UAAA,SAAA,MAAA;;AAAA,cAAA,KAAA,WAAA,sBAAA,UAAA,mBAAA,SAAA,mBAAA,aAAA,mBAAA,UAAA;AAAA,KAAA;AACA,UAAA,SAAA,SAAA,MAAA;;AAAA,yBAAA,UAAA,mBAAA,SAAA,WAAA,4BAAA,UAAA,mBAAA,SAAA,mBAAA,QAAA,mBAAA,UAAA,mBAAA,WAAA;AAAA,KAAA;AAGA,UAAA,WAAA,SAAA,MAAA;;AAAA,yBAAA,UAAA,mBAAA,WAAA,WAAA,gBAAA,UAAA,mBAAA,UAAA;AAAA,KAAA;AACA,UAAA,SAAA,SAAA,MAAA,cAAA,UAAA,IAAA,CAAA;AACA,UAAA,SAAA,IAAA,KAAA;AAKA,UAAA,WAAA,IAAA,IAAA;AAEA,UAAA,gBAAA,MAAA,MAAA,KAAA,MAAA,GAAA,EAAA,MAAA,GAAA,CAAA,EAAA,KAAA,GAAA;AACA,aAAA,eAAA,MAAA;;AACA,aAAA;AAAA,QAAA,YAAA,cAAA;AAAA,QACA,aAAA,cAAA,UAAA,mBAAA,cAAA;AAAA,MACA;AAAA,IACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}