{"version":3,"file":"NuxtImg.7faf3ed8.js","sources":["../../../../../../node_modules/@nuxt-themes/docus-edge/components/content/NuxtImg.vue"],"sourcesContent":["<script lang=\"ts\">\nimport type { PropType } from 'vue'\n\ntype NuxtImg = string & {\n  light: string\n  dark: string\n}\n\nexport default defineComponent({\n  props: {\n    src: {\n      type: [String, Object] as PropType<NuxtImg>,\n      default: null\n    },\n    alt: {\n      type: String,\n      default: ''\n    },\n    width: {\n      type: [String, Number],\n      default: undefined\n    },\n    height: {\n      type: [String, Number],\n      default: undefined\n    }\n  },\n  setup (props) {\n    const imgSrc = computed(() => {\n      let src = props.src\n\n      try {\n        src = JSON.parse(src as any)\n      } catch (e) {\n        src = props.src\n      }\n\n      if (typeof src === 'string') { return props.src }\n\n      return src\n    })\n\n    return {\n      imgSrc\n    }\n  },\n  render ({ imgSrc }) {\n    // String as `src`; return a single image\n    if (typeof imgSrc === 'string') {\n      return h('img', { src: imgSrc })\n    }\n\n    // Object as `src`; return a light and dark image if present\n    const nodes = []\n    if (imgSrc.light) {\n      nodes.push(h('img', { src: imgSrc.light, class: ['dark-img'] }))\n    }\n    if (imgSrc.dark) {\n      nodes.push(h('img', { src: imgSrc.dark, class: ['light-img'] }))\n    }\n\n    return nodes\n  }\n})\n</script>\n"],"names":[],"mappings":";AAQA,MAAA,YAAA,gBAAA;AAAA,EAAA,OAAA;AAAA,IACE,KAAA;AAAA;MAEI,SAAA;AAAA;;;;IAKA;AAAA;MAEF,MAAA,CAAA,QAAA,MAAA;AAAA,MACE,SAAA;AAAA,IACA;AAAA;MAEF,MAAA,CAAA,QAAA,MAAA;AAAA,MACE,SAAA;AAAA,IACA;AAAA,EACF;AAAA;;AAIE,UAAA,MAAA,MAAA;AAEA,UAAA;;;;;AAMA,UAAA,OAAA,QAAA,UAAA;AAAA,eAAA,MAAA;AAAA,MAAA;AAEA,aAAA;AAAA,IAAA,CAAA;AAGF,WAAA;AAAA,MAAA;AAAA;EAEA;AAAA;;;;;AAUA,QAAA,OAAA,OAAA;;;AAGA,QAAA,OAAA,MAAA;;;;;AAMJ,CAAA;;;;;;;"}