{"version":3,"file":"VideoPlayer.099feedf.js","sources":["../../../../../../node_modules/@nuxt-themes/docus-edge/components/content/VideoPlayer.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport type { PropType } from 'vue'\n\nconst props = defineProps({\n  poster: {\n    type: String,\n    default: ''\n  },\n  src: {\n    type: String,\n    default: ''\n  },\n  sources: {\n    type: Array as PropType<any[]>,\n    default: () => []\n  }\n})\n\nconst provider = computed(() => {\n  if (props.src && props.src.includes('youtube.com/watch')) {\n    const match = props.src.match(/\\?v=([^&]*)/)\n\n    return {\n      name: 'youtube',\n      src: `https://www.youtube-nocookie.com/embed/${match[1]}?autoplay=1`,\n      poster: props.poster || `https://i3.ytimg.com/vi/${match[1]}/hqdefault.jpg`\n    }\n  }\n})\n\nconst loaded = ref(false)\n\nif (!props.src && !props.sources.length) { throw new Error('VideoPlayer: you need to provide either `src` or `sources` props') }\n\nconst src = computed(() => props.src || props.sources?.[0]?.src || false)\n</script>\n\n<template>\n  <div class=\"relative inline-block my-4 overflow-hidden bg-black bg-opacity-25 rounded-lg video-player\" :class=\"{ loaded }\">\n    <NuxtImg v-if=\"provider ? provider.poster : poster\" image-classes=\"video absolute top-0 left-0 h-full w-full object-fit\" :src=\"(provider ? provider.poster : poster as any)\" />\n\n    <div v-if=\"loaded\" class=\"absolute top-0 left-0 w-full h-full video\">\n      <!-- Remote -->\n      <video v-if=\"!provider\" :poster=\"poster\" controls autoplay>\n        <source v-if=\"src\" :src=\"src\">\n        <source v-for=\"source in sources\" :key=\"source.src || source\" :src=\"source.src || source\" :type=\"source.type\">\n      </video>\n\n      <!-- YouTube -->\n      <iframe\n        v-else-if=\"provider.name === 'youtube'\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen=\"true\"\n        :autoplay=\"autoplay\"\n        class=\"w-full h-full\"\n        :src=\"provider.src\"\n      />\n    </div>\n\n    <div v-if=\"!loaded\" class=\"absolute top-0 left-0 w-full h-full cursor-pointer overlay\" @click=\"loaded = true\">\n      <button class=\"play\" />\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"postcss\">\n\n.video-player {\n  &:after {\n    position: absolute;\n    content: ' ';\n    display: block;\n  }\n\n  .play {\n    width: 68px;\n    height: 48px;\n    position: absolute;\n    cursor: pointer;\n    transform: translate3d(-50%, -50%, 0);\n    top: 50%;\n    left: 50%;\n    z-index: 1;\n    background-color: transparent;\n    background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 68 48\"><path fill=\"%23f00\" fill-opacity=\"0.8\" d=\"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\"></path><path d=\"M 45,24 27,14 27,34\" fill=\"%23fff\"></path></svg>');\n    filter: grayscale(100%);\n    transition: filter 0.1s cubic-bezier(0, 0, 0.2, 1);\n    border: none;\n  }\n\n  &:hover .play {\n    filter: none;\n  }\n}\n\nvideo {\n  @apply w-full;\n}\n\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,UAAA,WAAA,SAAA,MAAA;AACA,UAAA,MAAA,OAAA,MAAA,IAAA,SAAA,mBAAA,GAAA;AACA,cAAA,QAAA,MAAA,IAAA,MAAA,aAAA;AAEA,eAAA;AAAA,UAAA,MAAA;AAAA,UACA,KAAA,0CAAA,MAAA;AAAA,UACA,QAAA,MAAA,UAAA,2BAAA,MAAA;AAAA,QACA;AAAA,MACA;AAAA,IACA,CAAA;AAGA,UAAA,SAAA,IAAA,KAAA;AAEA,QAAA,CAAA,MAAA,OAAA,CAAA,MAAA,QAAA,QAAA;AAAA,YAAA,IAAA,MAAA,kEAAA;AAAA,IAAA;AAEA,UAAA,MAAA,SAAA,MAAA;;AAAA,mBAAA,SAAA,iBAAA,YAAA,mBAAA,OAAA,mBAAA,QAAA;AAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}